import _ from 'lodash';
import React, { useCallback } from 'react';
import { Menu, Item, Separator, Submenu } from 'react-contexify';

const bosses = [
    'Ghirahim 1',
    'Scaldera',
    'Moldarach',
    'Koloktos',
    'Tentalus',
    'Ghirahim 2',
]

const dungeons = [
    'Skyview',
    'Earth Temple',
    'Lanayru Mining Facility',
    'Ancient Cistern',
    'Sandship',
    'Fire Sanctuary',
    'Sky Keep',
]

function LocationGroupContextMenu() {
    const handlePathClick = useCallback((params) => {
        const locProps = params.props;
        locProps.setHint(`Path to ${params.data.boss}`);
    });

    const handleSotsClick = useCallback((params) => {
        const locProps = params.props;
        locProps.setHint('Spirit of the Sword');
    });

    const handleBarrenClick = useCallback((params) => {
        const locProps = params.props;
        locProps.setHint('Barren');
    });

    const handleClearCheck = useCallback((params) => {
        const locProps = params.props;
        locProps.setHint('');
    });

    const handleDungeonBindClick = useCallback((params) => {
        const locProps = params.props;
        locProps.openDungeonBindMenu(params.data.dungeon);
    });

    const renderMenu = useCallback((params) => {
        const locProps = params.props;
        return (
            <Menu id="group-context">
                {!locProps.unboundDungeon &&
                <div>
                    <Item disabled>Check All</Item>
                    <Item disabled>Uncheck All</Item>
                    <Separator />
                    <Submenu label="Set Path">
                        {
                            _.map(bosses, (bossName) => (
                                <Item onClick={handlePathClick} data={{ boss: bossName }}>{bossName}</Item>
                            ))
                        }
                    </Submenu>
                    <Item onClick={handleSotsClick}>Set SotS</Item>
                    <Item onClick={handleBarrenClick}>Set Barren</Item>
                    <Item onClick={handleClearCheck}>Clear Hint</Item>
                </div>
                }
                {locProps.isDungeon &&
                <Submenu label="Bind Dungeon to Entrance">
                    {
                        _.map(dungeons, (dungeonName) => (
                            <Item onClick={handleDungeonBindClick} data={{ dungeon: dungeonName }}>{dungeonName}</Item>
                        ))
                    }
                    <Item onClick={handleDungeonBindClick} data={{dungeon: ''}}>Unbind Dungeon</Item>
                </Submenu>
                }
            </Menu>
        )
    })

    renderMenu();
}

export default LocationGroupContextMenu;
