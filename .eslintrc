{
    "parser": "@typescript-eslint/parser",
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "prettier",
        "plugin:sonarjs/recommended",
        "plugin:vitest-globals/recommended"
      ],
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "plugins": [
        "react",
        "react-hooks",
        "@typescript-eslint",
        "sonarjs",
        "vitest-globals"
      ],
    "settings": {
        "react": {
            "version": "detect"
          }
    },
    "rules": {
        "indent": ["error", 4, {
            "SwitchCase": 1
        }],
        "react/jsx-indent": ["error", 4],
        "react/jsx-indent-props": ["error", 4],
        "react/jsx-filename-extension": ["error", {"extensions": [".jsx", ".js", "tsx"]}],
        // I would like us to consider this in the future, but for now it is too sweeping of a change to be feasible
        // It also may make code less readable in a lot of places where we use both props and state in the same functions
        // (although this may be symptomatic of a bigger issue with naming things)
        "max-len": 0,
        "no-plusplus": ["off"],
        "operator-linebreak": ["error", "after", {
            "overrides": {
                "?": "before",
                ":": "before"
            }
        }],
        "object-curly-newline": ["error", {
            "multiline": true,
            "consistent": true 
        }],
        "no-param-reassign": ["error"],
        "react/prefer-stateless-function": ["off"],
        "no-mixed-operators": ["off"],
        "linebreak-style": ["off"],
        "no-bitwise": ["off"],
        "react/require-default-props": ["off"],
        "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/unbound-method": "off",
        "sonarjs/no-duplicate-string": "off",
        "sonarjs/cognitive-complexity": "off",
        "sonarjs/no-nested-template-literals": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "no-unused-vars": "off"
    },
    "env": {
        "browser": true,
        "vitest-globals/env": true
    }
}